// <auto-generated />
using System;
using FinancialManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancialManager.Infrastructure.Migrations
{
    [DbContext(typeof(FinancialDbContext))]
    [Migration("20250716191814_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("FinancialManager.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rendimentos do trabalho",
                            IsActive = true,
                            Name = "Salário",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Trabalhos extras",
                            IsActive = true,
                            Name = "Freelance",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Rendimentos de investimentos",
                            IsActive = true,
                            Name = "Investimentos",
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Gastos com comida",
                            IsActive = true,
                            Name = "Alimentação",
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Combustível, transporte público",
                            IsActive = true,
                            Name = "Transporte",
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Aluguel, contas da casa",
                            IsActive = true,
                            Name = "Moradia",
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Entretenimento e diversão",
                            IsActive = true,
                            Name = "Lazer",
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Médico, farmácia",
                            IsActive = true,
                            Name = "Saúde",
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            Description = "Cursos, livros",
                            IsActive = true,
                            Name = "Educação",
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Description = "Outras despesas",
                            IsActive = true,
                            Name = "Outros",
                            Type = 2
                        });
                });

            modelBuilder.Entity("FinancialManager.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
